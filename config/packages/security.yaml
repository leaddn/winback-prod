security:
    enable_authenticator_manager: true
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
        App\Entity\User:
             algorithm: auto
        App\Entity\Admin:
            algorithm: auto
        App\Entity\Client:
            algorithm: auto

    role_hierarchy:
        ROLE_SAV:         [ROLE_USER, ROLE_GOE]
        ROLE_ADMIN:       [ROLE_SAV]
        ROLE_SUPER_ADMIN: [ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]

    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                #class: App\Entity\Admin
                class: App\Entity\User
                property: email
        #app_client_provider:
            #entity:
                #class: App\Entity\Client
                #property: email
        # used to reload user from session & other features (e.g. switch_user)
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            
            security: false
        #client_secured_area:
            #pattern: ^/client
            #lazy: true
            #provider: app_client_provider
            #custom_authenticator: App\Security\Client\AppAuthenticator
            #entry_point: App\Security\Client\AuthenticationEntryPoint
            #access_denied_handler: App\Security\Client\AccessDeniedHandler
            #form_login:
                #login_path: app_client_login
                #check_path: app_client_login
                #enable_csrf: true
            #logout:
                #path: app_logout
                # where to redirect after logout
                #target: app_client_login
            #remember_me:
                #secret:   '%kernel.secret%' # required
                #lifetime: 604800 # 1 week in seconds
                # by default, the feature is enabled by checking a
                # checkbox in the login form (see below), uncomment the
                # following line to always enable it.
                #always_remember_me: true
            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#the-firewall

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true
        main:
        #admin_secured_area:
            lazy: true
            provider: app_user_provider
            custom_authenticator: App\Security\AppAuthenticator
            entry_point: App\Security\AuthenticationEntryPoint
            access_denied_handler: App\Security\AccessDeniedHandler
            form_login:
                login_path: app_login
                check_path: app_login
                enable_csrf: true
            logout:
                path: app_logout
                # where to redirect after logout
                target: app_login
            remember_me:
                secret:   '%kernel.secret%' # required
                lifetime: 604800 # 1 week in seconds
                # by default, the feature is enabled by checking a
                # checkbox in the login form (see below), uncomment the
                # following line to always enable it.
                ####always_remember_me: true
            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#the-firewall

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true
    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
         - { path: ^/super, roles: ROLE_SUPER }
         - { path: ^/user/client, roles: ROLE_CLIENT }
         - { path: ^/admin, roles: ROLE_ADMIN }
         - { path: ^/sav, roles: ROLE_SAV }
         - { path: ^/user, roles: ROLE_USER }
         

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon

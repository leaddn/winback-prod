monolog:
    channels:
        - deprecation # Deprecations are logged in the dedicated "deprecation" channel when it exists

when@dev:
    monolog:
        handlers:
            main:
                type: rotating_file
                #path: var/log/dev/.log
                buffer_size: 50 # How many messages should be saved? Prevent memory leaks
                max_files: 10
                channels: ["!event", "!doctrine"]
            console:
                type: console
                process_psr_3_messages: false
                #channels: ["!event", "!doctrine", "!console"]
            doctrine:
                type: rotating_file
                path: var/log/dev/doctrine/.log
                buffer_size: 50
                max_files: 10
                channels: ["doctrine"]
            app:
                type: rotating_file
                path: var/log/dev/app/.log
                buffer_size: 50
                max_files: 10
                channels: ["app"] 
            version:
                type: rotating_file
                level: warning
                path: var/log/dev/version/.log
                buffer_size: 50
                max_files: 10
                channels: ["app"]

when@test:
    monolog:
        handlers:
            main:
                type: fingers_crossed
                action_level: error
                handler: nested
                excluded_http_codes: [404, 405]
                channels: ["!event"]
            nested:
                type: stream
                path: "%kernel.logs_dir%/%kernel.environment%.log"
                level: debug

when@prod:
    monolog:
        handlers:
            main:
                #type: fingers_crossed
                type: rotating_file
                #path: var/log/prod.log
                action_level: error
                handler: nested
                #excluded_http_codes: [404, 405]
                buffer_size: 50 # How many messages should be saved? Prevent memory leaks
                max_files: 20
                channels: [app]
            nested:
                type: stream
                path: php://stderr
                #path: var/log/prod.log
                level: debug
                formatter: monolog.formatter.json
            console:
                type: console
                process_psr_3_messages: false
                channels: ["!event", "!doctrine", "!console"]
            deprecation:
                type: stream
                channels: [deprecation]
                path: php://stderr
            filter_for_errors:
                type: fingers_crossed
                action_level: error
                handler: error_log_handler
                #excluded_404s:
                excluded_http_codes:
                    # regex: exclude all 404 errors from the logs
                    - ^/
            error_log_handler:
                type: error_log
                level: info
            version:
                type: rotating_file
                level: warning
                path: var/log/prod/version/.log
                buffer_size: 50
                max_files: 10
                channels: ["app"]
            server:
                type: rotating_file
                level: warning
                path: var/log/prod/server/.log
                buffer_size: 50
                max_files: 10
                channels: ["console"]
            deduplicated:
                type:    deduplication
                handler: symfony_mailer
            symfony_mailer:
                type:       symfony_mailer
                from_email: 'error@example.com'
                to_email:   ['leadieudonat@gmail.com', 'ldieudonat@winback.com', 'bwollensack@winback.com', klhote@winback.com]
                subject:    'An Error Occurred! %%message%%'
                level:      critical
                channels: ["console"]
                formatter:  monolog.formatter.html
                content_type: text/html 
